name: CICD Pipeline

# on: [push]

# This on will run be push and pull_request both
# on: [push, pull_request]

#This on Will be run specific  branch wise with push and pull_request
# on: 
#   push:
#     branches: 
#       - python
#       - java
#   pull_request:
#     branches:
#       - java
#       - c++

# This on is for workflow dispatch. you can deploy or occuring another action by click and selection
on: 
  workflow_dispatch:
      inputs:
          enviroment: 
              description: 'Select Environment'
              required: true
              default: 'staging'
              type: choice
              options:
                - staging
                - production

jobs:
    clean_everything:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
              
            - name: Cleaning DB
              run: echo "Cleaning The Database"

    test: 
        # runs-on: [ubuntu-latest, windows-lates, macos-latest]
        runs-on: ubuntu-latest
        env: 
          SECRETS_VAR: ${{secrets.SECRETS_VAR}}
          DEV: ${{vars.DEV}}
        steps: 
            - name: Checkout repo
              uses: actions/checkout@v3
        
            - name: Install Node js
              uses: actions/setup-node/@v4
              with: 
                node-version: "22"

            - name: Install packages
              run: npm install

            - name: Test the application
              run: npm run check

            - name: Prints the secrets
              run: |
                echo "The secrets is: ${SECRETS_VAR}"
                echo "The secrets variable is: ${DEV}"
    build:
      needs: test
      runs-on: ubuntu-latest
      steps: 
            - name: Checkout repo
              uses: actions/checkout@v3
        
            - name: Install Node js
              uses: actions/setup-node/@v4
              with: 
                node-version: "22"

            - name: build application
              run: |
                mkdir build
                cd build
                echo "Hello world" > hello.txt
            - name: Upload the artifact
              uses: actions/upload-artifact@v4
              with:
                name: build_folder
                path: ./build 
    deploy:
      needs: build
      runs-on: self-hosted
      steps: 
          - name: Checkout the code
            uses: actions/checkout@v3

          - name: Recieved artifact
            uses: actions/download-artifact@v4
            with: 
              name: build_folder

          - name: show the artifact
            run: |
             ls -a

          - name: Install packages
            run: npm install

          - name: Run the application by pm2
            run: |
              ls -a
              pm2 status

              #firstly delete if exist any app with this name
              pm2 delete node-app || true

              #pm2 restart all

              #Run application on background again
              pm2 start "npm start" --name="node-app"

              #save the process list
              pm2 save
